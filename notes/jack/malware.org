* Notes
** [2020-01-27 Mon]
Course help email: [[mailto:mare2020ece@gmail.com][mare2020ece@gmail.com]]
Course website: [[http://rci.rutgers.edu/~sa1087]]
* Homework
** HW1
[[https://docs.google.com/document/d/1aNu32_XUJ-QjYssRXdDGC0mFVrMKvvZ5pdPrUU9PejU/edit][Questions]]

*** Lab 1-1
**** Question 1
Yes, 40/71 antiviruses report the executable as a virus, and 32/69
report the DLL as a virus.
**** Question 2
The Time Date Stamp in IMAGE_FILE_HEADER reports compile times of
=2010/12/19 Sun 16:16:19 UTC=, and =2010/12/19 Sun 16:16:38 UTC= for
the executable and DLL respectively.
**** Question 3
No, but dependency walker reports only two DLL imports for the
executable, which likely it loads the other DLL in the folder with it.
Neither appear to be packed.
**** Question 4
The executable appears to import various functions related to reading,
writing, and copying files.

[[./lab1-1-imports.png]]

The DLL appears to import functions related to creating mutexes and
processes, and sending/receiving messages over network sockets.

 [[./lab1-1-dll-imports.png]]
**** Question 5
We could also check for any static strings in both files, which could
tip us off on what specific things each file does.

The executable contains a reference to the file name of the DLL file,
along with ="WARNING_THIS_WILL_DESTROY_YOUR_MACHINE"= , ="hello"= , and
a suspicious string ="C:\windows\system32\kerne132.dll"=, which is
extremely similar to the system DLL kernel32.dll.

[[./lab1-1-exe-strings.png]]

The DLL has strings of an IP address, and a few messages that it might
send to that IP address.

[[./lab1-1-dll-strings.png]]
**** Question 6
We could use wireshark to capture inbound or outbound network traffic,
checking specifically for the IP address we saw in the strings.
**** Question 7
I would guess that the executable drops the DLL into
=C:\windows\system32\kerne132.dll= and then executes it.

From host based indicators I thought it might open a socket, connect
to an IP, and send some sort of hello.

[[./lab1-1-disas.png]]

After static analysis, it looks like it receives executable files and
will spawn processes with code sent over the network by the server.
*** Lab 1-2
